# Configuration for Quantum Simulation Application

## Environment Variables

Create a `.env` file in the `api/` directory:

```env
# Flask Configuration
FLASK_ENV=development
FLASK_DEBUG=True
FLASK_PORT=5000

# CORS Configuration
CORS_ORIGINS=http://localhost:8080,http://localhost:3000

# Computational Parameters
GRID_POINTS=1000
X_MIN=-15
X_MAX=15

# Performance
CACHE_ENABLED=True
CACHE_TTL=3600
```

## Configuration Files

### api/config.py
```python
import os
from datetime import timedelta

class Config:
    # Flask
    FLASK_ENV = os.getenv('FLASK_ENV', 'development')
    DEBUG = os.getenv('FLASK_DEBUG', 'False') == 'True'
    
    # CORS
    CORS_ORIGINS = os.getenv('CORS_ORIGINS', '*').split(',')
    
    # Computation
    GRID_POINTS = int(os.getenv('GRID_POINTS', 1000))
    X_MIN = float(os.getenv('X_MIN', -15))
    X_MAX = float(os.getenv('X_MAX', 15))
    
    # Caching
    CACHE_ENABLED = os.getenv('CACHE_ENABLED', 'True') == 'True'
    CACHE_TTL = int(os.getenv('CACHE_TTL', 3600))
```

### web/src/config.js
```javascript
// API Configuration
const API_CONFIG = {
    // Development
    development: {
        baseUrl: 'http://localhost:5000/api',
        debug: true
    },
    // Production
    production: {
        baseUrl: 'https://api.yourdomain.com/api',
        debug: false
    }
};

// Get current environment
const ENV = process.env.NODE_ENV || 'development';
const CONFIG = API_CONFIG[ENV];
```

## Deployment Configurations

### Local Development
```bash
FLASK_ENV=development
FLASK_DEBUG=True
GRID_POINTS=1000
CORS_ORIGINS=http://localhost:8080
```

### Docker Development
```bash
FLASK_ENV=development
FLASK_DEBUG=False
GRID_POINTS=1000
CORS_ORIGINS=http://frontend:8080
```

### Production (Heroku)
```bash
FLASK_ENV=production
FLASK_DEBUG=False
GRID_POINTS=2000
CORS_ORIGINS=https://yourdomain.com
```

### Production (AWS/Docker)
```bash
FLASK_ENV=production
FLASK_DEBUG=False
GRID_POINTS=2000
CORS_ORIGINS=https://yourdomain.com,https://api.yourdomain.com
CACHE_ENABLED=True
CACHE_TTL=7200
```

## Database Configuration (Optional)

For storing simulation results:

```env
DATABASE_URL=postgresql://user:password@localhost/quantum_db
SQLALCHEMY_TRACK_MODIFICATIONS=False
```

## SSL/TLS Configuration

For HTTPS in production:

```env
SSL_CERT_PATH=/path/to/cert.pem
SSL_KEY_PATH=/path/to/key.pem
SSL_VERIFY=True
```

## Logging Configuration

```env
LOG_LEVEL=INFO
LOG_FILE=/var/log/quantum-api.log
LOG_FORMAT=json
```

## API Rate Limiting

```env
RATE_LIMIT_ENABLED=True
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_PERIOD=3600
```

## WebAssembly Configuration

```env
WASM_ENABLED=True
WASM_PATH=/app/cpp/quantum.wasm
WASM_MEMORY=256
```

---

See `.env.example` in the repository for a template.
